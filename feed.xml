<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Michael Sobrepera</title>
    <description>A site about stuff that I (Michael Sobrepera) work on, think, enjoy, etc...</description>
    <link>http://www.michaelsobrepera.com/</link>
    <atom:link href="http://www.michaelsobrepera.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 11 Jul 2015 22:19:46 -0400</pubDate>
    <lastBuildDate>Sat, 11 Jul 2015 22:19:46 -0400</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Fits (Shafts, pins, etc...)</title>
        <description>&lt;ul&gt;
  &lt;li&gt;RC1 - Close sliding, no play&lt;/li&gt;
  &lt;li&gt;RC2 - Sliding, turn but do not run&lt;/li&gt;
  &lt;li&gt;RC3 - Precision running, slow speed, neutral temperature running&lt;/li&gt;
  &lt;li&gt;RC4 - Close running,&lt;/li&gt;
  &lt;li&gt;RC 5,6 - Medium running - higher speed&lt;/li&gt;
  &lt;li&gt;RC 7 - Free running, large temp variation and/or low accuracy&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;RC 8,9 - Loose running, large tolerance allowance&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;LC - locational clearance, free assembling&lt;/li&gt;
  &lt;li&gt;LT - locational transistion, with slight interference&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;LN - locational interference, press fit for location only&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;FN1 - light drive, permanent assmebly, not for force&lt;/li&gt;
  &lt;li&gt;FN2 - medium drive, ordinary drive&lt;/li&gt;
  &lt;li&gt;FN3 - heavy drive, for heavy steel&lt;/li&gt;
  &lt;li&gt;FN 4,5 - high stress or shrink fits&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;press-fit-pin-reamer-sizes&quot;&gt;Press Fit Pin Reamer Sizes:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;1/8:    0.1230  0.1247&lt;/li&gt;
  &lt;li&gt;3/16:   0.1855  0.1870&lt;/li&gt;
  &lt;li&gt;1/4:    0.2480  0.2495&lt;/li&gt;
  &lt;li&gt;5/16:   0.3105  0.3120&lt;/li&gt;
  &lt;li&gt;3/8:    0.3730  0.3745&lt;/li&gt;
  &lt;li&gt;7/16:   0.4355  0.4370&lt;/li&gt;
  &lt;li&gt;1/2:    0.4980  0.4995&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 10 Jul 2015 00:00:00 -0400</pubDate>
        <link>http://www.michaelsobrepera.com/guides/fits.html</link>
        <guid isPermaLink="true">http://www.michaelsobrepera.com/guides/fits.html</guid>
        
        <category>mechanical design</category>
        
        <category>design</category>
        
        
        <category>guides</category>
        
      </item>
    
      <item>
        <title>Adept Ace and V-Plus</title>
        <description>&lt;h3 id=&quot;some-good-links&quot;&gt;Some Good Links:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.adept.com/forum/viewtopic.php?f=45&amp;amp;t=115&quot;&gt;cool adept stuff&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ceeps.colostate-pueblo.edu/Engineering/RoboticsLaboratory/AdeptSCARA/Pages/CoordinateSystems.aspx&quot;&gt;coordinate systems&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www1.adept.com/main/KE/DATA/Robot/iCobra/iCobra_UG.pdf&quot;&gt;icobra manual&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www1.adept.com/main/KE/DATA/V%20Plus/MicroV/MicrovTOC.htm&quot;&gt;MICRO V+ STUFF&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www1.adept.com/main/KE/DATA/V%20Plus/V%20Language%20User/V+Programming_TOC.html&quot;&gt;V+&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www1.adept.com/main/KE/DATA/ACE/ACE_User/DL_Support/doc_frames.html&quot;&gt;ACE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=_jEhJyb9dFo&amp;amp;list=WL&amp;amp;index=3&quot;&gt;VISUAL STUDIO GUI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;monitor-mode&quot;&gt;MONITOR MODE:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;ENABLE POWER&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;DISABLE POWER&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;DO @0 JMOVE 10&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;DO(REQUIRED) @0(TASK NUMBER) JMOVE(MOVE COMMAND) 10(BY HOW MUCH)&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;ESTOP&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;(activates e-stop)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;EXECUTE taskNum program&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;(executes the program on the directed task number)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;LIST expression&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;(lists the value of the expression)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;PANIC&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;(stops all robots without turning off power)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;PARAMETER parameter[i]=val&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;(sets the parameter to val)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;PARAMETER parameter[i]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;(displays parameter val)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;PARAMETER&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;(displays all paramter values)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;STORE&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;(stores RAM into NVRAM)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;SWITCH switch[i]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;(display setting of switch)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;WHERE&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;(displays robot position and configuration)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;useful-commands&quot;&gt;USEFUL COMMANDS&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;JMOVE j1,..,jn&lt;/code&gt;              (joint interpreted move to joint values. ommited values “,,” are not moved)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;MOVE    loc&lt;/code&gt;                     (joint interpolated move to ‘loc’)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;MOVES loc&lt;/code&gt;                     (straight line move to ‘loc’)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;SIG&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;ACCEL acceleration(0-100), deceleration(0-100)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;APPRO location, distance&lt;/code&gt;      (joint interpolated movement to z above location by distance)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;APPROS location, distance&lt;/code&gt;     (staight-line movement to z above location by distance)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;AUTO var, var, var..&lt;/code&gt;          (local non-pervasive variable)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;LOVAL var, var, var..&lt;/code&gt;      (local pervasive variable)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;GLOBAL var, var, var..&lt;/code&gt;        (globale variable)
&lt;strong&gt;NOTE ON VARIABLES: MUST BE DECLARED AFTER PROGRAM STATEMENT, BEFORE EXECUTABLES&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;BITS firstRegisterIndex, numRegisters=value&lt;/code&gt;    (changes output parsing ‘value’ in binary over outputs begining at ‘firstRegisterIndex’ and indexing for numRegisters)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;BRAKE&lt;/code&gt;                         (stops robot motion imediately at decel rate. program then proceeds)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;BREAK&lt;/code&gt;                         (pauses program until current motion is complete. program then proceeds)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;CALL program&lt;/code&gt;                  (JSR)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;COARSE tolerance&lt;/code&gt;              (makes movement less precisse but faster, the larger the tolerance, as a percent, the less accurate the move)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;DECOMPOSE array[i]=loc&lt;/code&gt;        (takes the 6 position variables of ‘loc; and places them into the array begining at index=’i’. in the event of a multidimension array, [i_1,i_2,i_n], only ‘i_n’ will be incremented&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;DELAY time&lt;/code&gt;                    (delays all motion for time, in seconds, all other aspects of program will run up until next motion)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;DEPART distance&lt;/code&gt;                (moves tool upwards by distance)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;DRIVE joint, change, speed&lt;/code&gt;    (moves the joint at speed as %*monitor speed to incremental change)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;FINE tol&lt;/code&gt;                        (adjust motion tolerance to ‘tol’ which is a percent of standard, so smaller is tighter)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;HALT&lt;/code&gt;                               (hard program exit, blows   through all stacks)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;HERE loc&lt;/code&gt;                        (sets the location or location offset as the current robot position)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;JHERE var1,...,varn&lt;/code&gt;              (sets current joint values to variables in sequence)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;LEFTY&lt;/code&gt;                              (makes robot move as left handed arm)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;RESET&lt;/code&gt;                              (turns off all external output signals)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;RETURN&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;RIGHTY&lt;/code&gt;                        (sets robot in right handed mode)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;SET loc1=loc2&lt;/code&gt;                 (sets ‘loc1’ equal to ‘loc2’)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;SET loc1=loc2:tran&lt;/code&gt;            (sets ‘loc1’ equal to the result of ‘loc2’ post transformation&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;SIGNAL reg1,..,regn&lt;/code&gt;           (turns register on or off. positive value is on negativ value is off)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;MULTIPLE&lt;/code&gt;                      (allows complete wrist movement)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;SINGLE&lt;/code&gt;                        (limits wrist movement to +/* 180 of center)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;SPEED var&lt;/code&gt;                     (sets speed to var, 100 is standard % speed, MMPS gives mm/s)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;STOP&lt;/code&gt;                          (equivalent to RETURN in the primary frame)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;SWITCH switch=var&lt;/code&gt;             (sets the switch value to ‘var’)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;TIMER timer=time&lt;/code&gt;              (sets the timer, 1-15, to the time, in seconds precise to milliseconds, time will count to zero)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;TOOL val&lt;/code&gt;                      (sets the tool offset to val)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;WAIT bool&lt;/code&gt;                     (waits until the boolean is true)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;reference-frames&quot;&gt;REFERENCE FRAMES&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;HERE frame:loc&lt;/code&gt;                (defines loc at the current location as a transformation from frame)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;MOVE loc:loc&lt;/code&gt;                  (moves to the vector of loc+loc)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;TRANS(x,y,z,r,p,q)&lt;/code&gt;            (returns the transformation)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;control-structures&quot;&gt;CONTROL STRUCTURES&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;END&lt;/code&gt;                           (needed after everything&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;EXIT&lt;/code&gt;                (blows out all control structures)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;FOR var = i_0 TO i_f inc&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;GOTO label&lt;/code&gt;            (labels are done as integers at line start)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;n&quot;&gt;CASE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OF&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;VALUE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,...&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;group_of_steps&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;VALUE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,...&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;group_of_steps&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ANY&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;group_of_steps&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;END&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;n&quot;&gt;DO&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;group_of_steps&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;UNTIL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logical_expression&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;system-switches&quot;&gt;SYSTEM SWITCHES&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;AUTO.POWER.OFF&lt;/code&gt;        (if on then power will shut off for motion errors&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;DRY.RUN&lt;/code&gt;            (will run without any robot motion)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;ESTOP.SIGNAL&lt;/code&gt;            (determines whether estop status is output to DO 1)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;POWER&lt;/code&gt;                (changes high power state)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;UPPER&lt;/code&gt;                (for all boolean operations with strings, all characters are interpreted as uppercase)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;transformation-stuff&quot;&gt;TRANSFORMATION STUFF&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;FRAME(loc1, loc2, loc3, loc4)&lt;/code&gt;        (sets up a really accurate axis system)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;INVERSE(transformation)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;RX(ang)&lt;/code&gt;                (rotates about the X-axis)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;RY(ang)&lt;/code&gt;                (rotates about the Y-axis)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;RZ(ang)&lt;/code&gt;                (rotates about the Z-axis)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;SCALE(trans, scale)&lt;/code&gt;            (returns the transformation by scale)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;SHIFT(trans BY x,y,z)&lt;/code&gt;           (returns trans shifted by x,y,z)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;TOOL&lt;/code&gt;                    (returns the tool offset)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;TRANS(x,y,z,y,p,r)&lt;/code&gt;            (returns trans defined by values)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;functions&quot;&gt;FUNCTIONS&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;SIG(sig1,..,sign)&lt;/code&gt;            (returns logical and of input signals)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;INRANGE(loc)&lt;/code&gt;                (returns values indicating whether loc is inrange. If 0, loc is in range. If bit 14 is active (8192), loc is too close. If bit 15 is active (16384), loc is too far.)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;var BAND var&lt;/code&gt;                (binary and)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;STATE(select)&lt;/code&gt;                (returns a value indicating various factors defining the &lt;a href=&quot;http://www1.adept.com/main/KE/DATA/V%20Plus/MicroV/MicrovTOC.htm&quot;&gt;state of the robot&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;passing-args&quot;&gt;PASSING ARGS&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;for undefined args use &lt;code&gt;DEFINED&lt;/code&gt; to test arg list&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;interupts&quot;&gt;INTERUPTS&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;REACT&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;REACTE&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;h2 id=&quot;reacti&quot;&gt;&lt;code&gt;REACTI&lt;/code&gt;&lt;/h2&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;startup-routine&quot;&gt;STARTUP ROUTINE&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;this can be done as a seperate program which is called from elsewhere&lt;/li&gt;
  &lt;li&gt;initialize global variables&lt;/li&gt;
  &lt;li&gt;set I/O ports as logically named global vars. Ex.: &lt;code&gt;cycle.start = 1001&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;set signals to startup preffered state&lt;/li&gt;
  &lt;li&gt;set up transformations ex:    &lt;code&gt;SET pallet = TRANS(62.4,-215.978,293.898,0,180,-46.208)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;console-output&quot;&gt;CONSOLE OUTPUT:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;TYPE output1,..,output n&lt;/code&gt;        (outputs with modified text, limited to 512 char)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;/S&lt;/code&gt;                     (acting as a modifier will prevent Carriage Return)&lt;/li&gt;
  &lt;li&gt;Ex:    &lt;code&gt;TYPE /S, &quot;This &quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;setting-up-autostart&quot;&gt;SETTING UP AUTOSTART&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Create a program named AUTO, as well as any other programs required for the application. The AUTO program should initialize the application and possibly start other user programs in tasks 0, 1, and 2.&lt;/li&gt;
  &lt;li&gt;Create and initialize any global variables to be used by the application, for example, arm positions.&lt;/li&gt;
  &lt;li&gt;Use the &lt;code&gt;STORE&lt;/code&gt; monitor command to store all programs and variables on NVRAM.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;ENABLE AUTOSTART&lt;/code&gt; in the monitor&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;signals&quot;&gt;SIGNALS&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;signals are simply booleans.&lt;/li&gt;
  &lt;li&gt;1-8 are outputs&lt;/li&gt;
  &lt;li&gt;2001-2512 are soft software signals&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;things-to-look-into&quot;&gt;THINGS TO LOOK INTO&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;CALIBRATE&lt;/code&gt;             (command that calibrates encoders?)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;EVENT&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;TOOL&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;KILL&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;EXECUTE&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;                (appears to be !=)&lt;/li&gt;
  &lt;li&gt;do you need to declare global variables which have already been initialized?&lt;/li&gt;
  &lt;li&gt;modifiying monitor speed using MONITOR modifier&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;electrical&quot;&gt;Electrical&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;24 V
    &lt;ul&gt;
      &lt;li&gt;Molex P/N 44441-2002&lt;/li&gt;
      &lt;li&gt;Molex P/N 43375-0001&lt;/li&gt;
      &lt;li&gt;8 amp inline fuse&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 10 Jul 2015 00:00:00 -0400</pubDate>
        <link>http://www.michaelsobrepera.com/guides/adept.html</link>
        <guid isPermaLink="true">http://www.michaelsobrepera.com/guides/adept.html</guid>
        
        <category>robotics</category>
        
        <category>code</category>
        
        <category>programming</category>
        
        <category>automation</category>
        
        
        <category>guides</category>
        
      </item>
    
      <item>
        <title>Welcome To My Site</title>
        <description>&lt;p&gt;So it has been a long time coming, but I have finally built myself a website. So please wander around, give feedback, and enjoy. I will note that it is still a work in progress, so any problems you find and point out will help me progress faster :).&lt;/p&gt;

&lt;p&gt;Making a personal website is something that I have been wanting to do for a very long time, but I have never had the time. Well, this summer I am working for Eli Lilly, a company that values work life balance, so I have the time. A long time ago, I had started working on a site that was going to be ASP.net MVC based. The idea was to build my own CMS that would do exactly what I wanted. Of course, I never could get anywhere with that, it was just far to audacious. When I started back working on the site a couple of weekends ago, I decided that I should just make a static website. This was something that I had considered originally, when I went the ASP.net route, but I had thought it would be more trouble than it was worth.&lt;/p&gt;

&lt;p&gt;When I finally decided on doing a static site I felt that making my own generator would be best (I figured I would write it in Python), but I decided to look for some tools first. I found Jekyll and gave it a try. Initially, I expected that I would end up learning some things from Jekyll, get frustrated, and transfer some of what I had learned into my own static site generator. In the end, I found a number of things in Jekyll to be pretty nice and as I have gotten more comfortable with the plugin system I have been able to expand the capabilities of Jekyll to suit my needs.&lt;/p&gt;

&lt;h3 id=&quot;how-i-use-jekyll&quot;&gt;How I Use Jekyll&lt;/h3&gt;
&lt;p&gt;For those who are interested here is how I have my site setup. For those really interested, check out my GitHub and you can see it.&lt;/p&gt;

&lt;h4 id=&quot;git&quot;&gt;GIT&lt;/h4&gt;
&lt;p&gt;The first thing to cover is how I use GIT and GitHub. The site is hosted on GitHub pages, which are pretty quick and FREE. However, I use some custom plugins, so I cannot use the GitHub pages builder to build my site. I therefore build my site locally and push it up to GitHub. To do this, I have two branches, a working and master branch. The master branch is required by pages to hold the hosted site, and the working branch is where I do my work. In order to publish, I run a little PowerShell script I wrote.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;k&quot;&gt;Function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;publishmichaelsobrepera&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mjsStaticSite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;checkout&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;master&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reset&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-hard&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;working&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Get-ChildItem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mjsStaticSite&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-Exclude&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_site&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-Recurse&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Where&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-notlike&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;C:\GIT\mjsStaticSite\_site\*&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-ExpandProperty&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FullName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-Descending&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Remove-Item&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-force&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;xcopy&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mjsStaticSite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_site&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mjsStaticSite&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Get-ChildItem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mjsStaticSite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_site&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-Recurse&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-ExpandProperty&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FullName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-Descending&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Remove-Item&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-Force&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Remove-Item&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mjsStaticSite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_site&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-Force&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;*;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;commit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;automated commit to publish&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;push&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gitHub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;master&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;-force&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;checkout&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;working&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This allows me to just commit my work on the working branch, publish, and keep on going. Note, I do always push up my working branch just incase something goes wrong.&lt;/p&gt;

&lt;h4 id=&quot;editor&quot;&gt;Editor&lt;/h4&gt;
&lt;p&gt;At first I was using sublime text, which has been my go to editor for a good three years. However, just today, I switched over to Atom. So far, it seems pretty slick. It has a nice built in markdown renderer that works well, lots of packages, really nice git support, and works with my touchscreen and touchpad (something which sublime did not do well). There are some things that need to be done to make Atom work well though.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The first thing is to change the Syntax Theme. The default is awful, I switched to monokai, which is way nicer.&lt;/li&gt;
  &lt;li&gt;Change some editor settings. Show the indent guide, show invisibles, use soft wrap, add a soft wrap hanging indent (I like 3), increase the tab length (I went to 4)&lt;/li&gt;
  &lt;li&gt;I added in the jekyll package. You could probably do without this, and I don’t like to use the built in server (preffering to just jekyll serve)&lt;/li&gt;
  &lt;li&gt;In the Packages list, go down to the Tabs package (which is built in), and check Use Preview Tabs. If you don’t do this you will quickly have way too many tabs open
That’s about it, I am sure I will tweak and configure it over time, but those things have me going.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As a side note for Atom, you can make it the default editor for GIT using this:&lt;code&gt;git config --global core.editor &quot;atom --wait&quot;&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;folder-structure&quot;&gt;Folder Structure&lt;/h4&gt;
&lt;p&gt;So I don’t just want this site to be a blog. It has to also be a place for me to show off papers and projects which I have worked on. I also wanted somewhere I can post some guides that I have made, if for no reason than to have access anywhere I am. In order to accomplish this, I needed a way to sort my stuff. So I made a folder under _posts for: blog, guides, papers, and projects. I also have a different category for each. I also created unique layouts for guides and papers. I then put folders for images and other files under my root directory. One of my goals was to automate as much as I can, so if a post defines an imageDir in its YAML front matter, then any images which are in that imageDir inside of the images folder will be automatically displayed at the bottom of the post. This is done by one of the plugins I made. Similarly, all papers define a PDF which is automatically displayed. Finally, I put a primaryPages folder under the root to hold the html landing pages that show up as / only page (ex. michaelsobrepera.com/about). To make this landing pages work, you just need to specify what the permalink should be.&lt;/p&gt;

&lt;h4 id=&quot;videos-and-powerpoints&quot;&gt;Videos and PowerPoints&lt;/h4&gt;
&lt;p&gt;There are a few places where I have wanted a video or a PowerPoint. This is not possible using GitHub pages, as GitHub limits you to 100mb. So the solution is to put all of your videos on YouTube and all of your PowerPoints on OneDrive. Both services allow you to embed files from their services right in your html.&lt;/p&gt;

&lt;h4 id=&quot;hosting-and-dns&quot;&gt;Hosting and DNS&lt;/h4&gt;
&lt;p&gt;I used CNAME redirects to get from my URL to gitHub, this loads pretty well. I &lt;a href=&quot;http://www.webpagetest.org/&quot;&gt;profiled&lt;/a&gt; the site and found that the only slowdown in loading was that I did not have a favicon. So I added that. I will note that there are some guides for setting up with NameCheap (my registrar) which show you needing to use Apex records. I could not figure out why I wouldn’t just use CNAMEs and found the CNAMEs load way faster. But who knows, maybe I am breaking something.&lt;/p&gt;

&lt;h4 id=&quot;styling&quot;&gt;Styling&lt;/h4&gt;
&lt;p&gt;Yeah, I am not good at CSS and SASS, and really they just don’t interest me very much. So for now my site is just using the stock styling. It seems ok, relatively mobile friendly. One day maybe I will make something unique.&lt;/p&gt;

&lt;h4 id=&quot;comments&quot;&gt;Comments&lt;/h4&gt;
&lt;p&gt;I wanted to make sure from the start to have comments wherever appropriate. I looked at a lot of different systems, tried a few out and I narrowed it down to two, livefyre and disqus. They both are pretty mature, remotely hosted (I did not want to have to build my own server), allow guest posting, and are easy to use. I ended up going with livefyre (as you can see below). The reason is that it seems to offer much tighter social media integration. It also seems to be a tad quicker to load. The only complaint I could find anywhere about livefyre was that it does not allow guest posts, but that feature has now been added, so it is no longer a factor. I really think both systems would work well, but it seemed like livefyre was just a little better.&lt;/p&gt;

&lt;h2 id=&quot;thanks&quot;&gt;Thanks&lt;/h2&gt;
&lt;p&gt;Hopefully I will be posting more, and I hope you enjoy some of what you find. This will be an ongoing effort, so check back.&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

&lt;p&gt;-Michael&lt;/p&gt;
</description>
        <pubDate>Sat, 27 Jun 2015 00:00:00 -0400</pubDate>
        <link>http://www.michaelsobrepera.com/blog/welcome.html</link>
        <guid isPermaLink="true">http://www.michaelsobrepera.com/blog/welcome.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Tkinter</title>
        <description>&lt;h3 id=&quot;startup&quot;&gt;STARTUP:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;from Tkinter import *&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;import ttk&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;root = Tk()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;widgets&quot;&gt;WIDGETS:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;instantiation:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;button = ttk.Button(&amp;lt;parent&amp;gt;, text = &#39;&amp;lt;some text&amp;gt;&#39;)&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;label = ttk.label(&amp;lt;parent&amp;gt;, text = &#39;&amp;lt;some text&amp;gt;&#39;)&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;adding:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;button.pack()&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;changing values:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;button[&#39;text&#39;] = &#39;&amp;lt;some text&amp;gt;&#39;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;button.config(text = &#39;&amp;lt;some text&amp;gt;&#39;)&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;viewing configuration options:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;button.config()&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Geometry Mgmnt:
    &lt;ul&gt;
      &lt;li&gt;Pack -&amp;gt; you left, right, blah&lt;/li&gt;
      &lt;li&gt;Grid -&amp;gt; its a gird&lt;/li&gt;
      &lt;li&gt;Place -&amp;gt; absolute positioning&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Deleting:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;&amp;lt;widget&amp;gt;.destroy()&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;EVENT HANDLERS:
    &lt;ul&gt;
      &lt;li&gt;command callbacks -&amp;gt; for obvious stuff&lt;/li&gt;
      &lt;li&gt;event bindings -&amp;gt; for custom stuff&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;windows&quot;&gt;windows:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;zoom to max:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;window.state(&#39;zoomed&#39;)&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;configuration:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;root.config(background = &#39;black&#39;)&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Text Display:
    &lt;ul&gt;
      &lt;li&gt;text widget&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;canvas&quot;&gt;CANVAS:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;canvas = Canvas(&amp;lt;parent&amp;gt;)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;canvas.config(width = &amp;lt;&amp;gt;, height = &amp;lt;&amp;gt;)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;line = canvas.create_line(&amp;lt;x1&amp;gt;,&amp;lt;y1&amp;gt;,&amp;lt;x2&amp;gt;,&amp;lt;y2&amp;gt;,fill = &#39;&amp;lt;color&amp;gt;&#39;,width = &amp;lt;width&amp;gt;)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;canvas.itemconfigure(line, fill=&#39;&amp;lt;color&amp;gt;&#39;)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;canvas.coords(line)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;CAN BE POLYLINE::
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;canvas.coords(line,&amp;lt;x1&amp;gt;,&amp;lt;y1&amp;gt;,&amp;lt;x2&amp;gt;,&amp;lt;y2&amp;gt;,&amp;lt;x3&amp;gt;,&amp;lt;y3&amp;gt;,&amp;lt;x4&amp;gt;,&amp;lt;y4&amp;gt;)&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;smmoth:
        &lt;ul&gt;
          &lt;li&gt;&lt;code&gt;canvas.itemconfigure(line, smooth = True)&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code&gt;canvas.itemconfigure(line,splinesteps = &amp;lt;numsteps&amp;gt;)&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Delete items:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;canvas.delete(&amp;lt;item&amp;gt;)&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;canvas.delete(all)&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;rect = canvas.create_rectangle(&amp;lt;x1&amp;gt;,&amp;lt;y1&amp;gt;,&amp;lt;x2&amp;gt;,&amp;lt;y2&amp;gt;)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;oval = canvas.create_oval(&amp;lt;x1&amp;gt;,&amp;lt;y1&amp;gt;,&amp;lt;x2&amp;gt;,&amp;lt;y2&amp;gt;)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;arc = canvas.create_arc(&amp;lt;x1&amp;gt;,&amp;lt;y1&amp;gt;,&amp;lt;x2&amp;gt;,&amp;lt;y2&amp;gt;)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;text = canvs.create_text(&amp;lt;x1&amp;gt;,&amp;lt;y1&amp;gt;, text = &#39;&amp;lt;text&amp;gt;&#39;,font = (&amp;lt;name&amp;gt;,&amp;lt;fontsize&amp;gt;,&amp;lt;bold&amp;gt;))&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;changing order:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;canvas.lift(&amp;lt;item&amp;gt;)&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;canvas.lower(&amp;lt;item&amp;gt;)&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;adding a widget:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;canvas.create_window(&amp;lt;x1&amp;gt;,&amp;lt;y1&amp;gt;,window = &amp;lt;widget&amp;gt;)&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;TAGS:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;canvas.itemconfigure(&amp;lt;item&amp;gt;,tag=(&amp;lt;tag1&amp;gt;,&amp;lt;o: other tags&amp;gt;))&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;canvas.gettags(&amp;lt;item&amp;gt;)&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;styles&quot;&gt;STYLES:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;&amp;lt;item&amp;gt;.winfo_class() &amp;lt;-returns style&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;style.configure(&#39;&amp;lt;stylename&amp;gt;&#39;,&amp;lt;paramater&amp;gt;=&amp;lt;val&amp;gt;)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;new style: `
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;style.configure(&#39;&amp;lt;newname&amp;gt;.&amp;lt;inherit&amp;gt;&#39;,&amp;lt;paramater&amp;gt;=&amp;lt;val&amp;gt; )&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;&amp;lt;item&amp;gt;.config(style = &#39;&amp;lt;style&amp;gt;&#39;)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;style.layout(&#39;&amp;lt;style&amp;gt;&#39;)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;style.lookup(&#39;&amp;lt;style&amp;gt;&#39;,&#39;&amp;lt;property&amp;gt;&#39;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://effbot.org/tkinterbook/widget.htm&quot;&gt;a nice resource&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 25 Jun 2015 00:00:00 -0400</pubDate>
        <link>http://www.michaelsobrepera.com/guides/tkinterGuide.html</link>
        <guid isPermaLink="true">http://www.michaelsobrepera.com/guides/tkinterGuide.html</guid>
        
        <category>python</category>
        
        <category>code</category>
        
        <category>programming</category>
        
        <category>gui</category>
        
        <category>tkinter</category>
        
        <category>tk</category>
        
        
        <category>guides</category>
        
      </item>
    
      <item>
        <title>Sublime</title>
        <description>&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Package control : how you install stuff&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ctrl&gt;&lt;shift&gt;&lt;p&gt; : fuzzy search of commands

&lt;/p&gt;&lt;/shift&gt;&lt;/ctrl&gt;
  &lt;/li&gt;
  &lt;li&gt;TEX:
    &lt;ul&gt;
      &lt;li&gt;LatexTools
        &lt;ul&gt;
          &lt;li&gt;&lt;code&gt;texify&lt;/code&gt; : build&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 25 Jun 2015 00:00:00 -0400</pubDate>
        <link>http://www.michaelsobrepera.com/guides/sublimeGuide.html</link>
        <guid isPermaLink="true">http://www.michaelsobrepera.com/guides/sublimeGuide.html</guid>
        
        <category>sublime</category>
        
        <category>text editor</category>
        
        <category>programming</category>
        
        
        <category>guides</category>
        
      </item>
    
      <item>
        <title>Raspberry Pi</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://pi.gadgetoid.com/pinout/pin21_gpio9&quot;&gt;cool pinout&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://learn.adafruit.com/category/learn-raspberry-pi&quot;&gt;Adafruit Guides&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;setup-and-access&quot;&gt;SETUP AND ACCESS:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://learn.adafruit.com/adafruits-raspberry-pi-lesson-3-network-setup/setting-up-wifi-with-occidentalis&quot;&gt;Setup WIFI&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://learn.adafruit.com/adafruits-raspberry-pi-lesson-6-using-ssh/overview&quot;&gt;SSH&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;VNC:
    &lt;ul&gt;
      &lt;li&gt;Currently Running stuff:
        &lt;ul&gt;
          &lt;li&gt;&lt;code&gt;startx&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code&gt;x11vnc -display :0 -q&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;New Desktop:
  &lt;code&gt;vncserver :1&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Video Out:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://learn.adafruit.com/using-a-mini-pal-ntsc-display-with-a-raspberry-pi/configure-and-test&quot;&gt;PAL/NTSC Setup&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://learn.adafruit.com/user-space-spi-tft-python-library-ili9341-2-8&quot;&gt;TFT&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.amazon.com/review/R2SWCZHX0PXU3T/ref=cm_cr_dp_title?ie=UTF8&amp;amp;ASIN=B006MPRFJQ&amp;amp;nodeID=1077068&amp;amp;store=car&quot;&gt;Amazon Screen&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;edge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;edge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beauty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sdtv_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#for NTSC&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sdtv_aspect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#for 16:9&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;framebuffer_width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;480&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;framebuffer_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;272&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;disable_overscan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#non-intuitive but the overscan_scale does the work&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;overscan_scale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#currently undocumented but works&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;overscan_left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;overscan_right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;overscan_top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;overscan_bottom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;gpio&quot;&gt;GPIO:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;GPIO Setup:
    &lt;ul&gt;
      &lt;li&gt;WiringPi:
        &lt;ul&gt;
          &lt;li&gt;&lt;code&gt;git clone git://git.drogon.net/wiringPi&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code&gt;cd wiringPi&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code&gt;./build&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;Python Wrappers:
            &lt;ul&gt;
              &lt;li&gt;&lt;code&gt;sudo apt-get install python-dev&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code&gt;sudo apt-get install python-setuptools&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code&gt;git clone https://github.com/Gadgetoid/WiringPi2-Python.git &lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code&gt;cd WiringPi2-Python&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code&gt;sudo python setup.py install&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://learn.adafruit.com/reading-a-analog-in-and-controlling-audio-volume-with-the-raspberry-pi/script&quot;&gt;ADC&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;setup:
        &lt;ul&gt;
          &lt;li&gt;wire to pin and ground&lt;/li&gt;
          &lt;li&gt;Setup global mode:
            &lt;ul&gt;
              &lt;li&gt;&lt;code&gt;GPIO.setmode(GPIO.BCM)&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Setup Specific pin:
            &lt;ul&gt;
              &lt;li&gt;&lt;code&gt;GPIO.setup(14, GPIO.IN, GPIO.PUD_UP)&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;screen-blankinghttpslearnadafruitcomraspi-animated-gif-picture-framemaking-changes&quot;&gt;&lt;a href=&quot;https://learn.adafruit.com/raspi-animated-gif-picture-frame/making-changes&quot;&gt;Screen Blanking&lt;/a&gt;:&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;sudo nano /etc/kbd/config&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;change: &lt;code&gt;BLANK_TIME=30&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;to: &lt;code&gt;BLANK_TIME=0&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;sudo nano /etc/X11/xinit/xinitrc&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;after first line, add:
        &lt;ul&gt;
          &lt;li&gt;&lt;code&gt;xset s off&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code&gt;xset -dpms&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code&gt;xset s noblank&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;`sudo nano /etc/lightdm/lightdm.conf
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;[SeatDefaults]&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;xserver-command=X -s 0 -dpms&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;`sudo nano /etc/xdg/lxsession/LXDE/autostart
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;# @xscreensaver -no-splash&lt;/code&gt; &amp;lt;-make it commmented out
        &lt;ul&gt;
          &lt;li&gt;add:
            &lt;ul&gt;
              &lt;li&gt;&lt;code&gt;@xset s off&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code&gt;@xset -dpms&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code&gt;@xset s noblank&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;starting-stuff-at-startup&quot;&gt;Starting stuff at startup:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.instructables.com/id/Raspberry-Pi-Launch-Python-script-on-startup/?ALLSTEPS&quot;&gt;http://www.instructables.com/id/Raspberry-Pi-Launch-Python-script-on-startup/?ALLSTEPS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.raspberrypi.org/learning/tweeting-babbage/worksheet2/&quot;&gt;http://www.raspberrypi.org/learning/tweeting-babbage/worksheet2/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Post XWindows Start:
    &lt;ul&gt;
      &lt;li&gt;EDIT: &lt;code&gt;/etc/xdg/lxsession/LXDE-pi/autostart&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;at end add: &lt;code&gt;@/usr/bin/python /home/pi/...&amp;lt;file.py&amp;gt;&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;To run as superuser:
        &lt;ul&gt;
          &lt;li&gt;EDIT: &lt;code&gt;/etc/xdg/lxsession/LXDE-pi/autostart&lt;/code&gt;
            &lt;ul&gt;
              &lt;li&gt;at end add: &lt;code&gt;@/usr/bin/sudo /home/pi/...&amp;lt;file.py&amp;gt;&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;EDIT: &lt;code&gt;&amp;lt;file.py&amp;gt;&lt;/code&gt;
            &lt;ul&gt;
              &lt;li&gt;first line add: &lt;code&gt;#!/usr/bin/env python&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;In terminal:
            &lt;ul&gt;
              &lt;li&gt;&lt;code&gt;sudo chmod +x &amp;lt;file.py&amp;gt;&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 25 Jun 2015 00:00:00 -0400</pubDate>
        <link>http://www.michaelsobrepera.com/guides/raspberrypiGuide.html</link>
        <guid isPermaLink="true">http://www.michaelsobrepera.com/guides/raspberrypiGuide.html</guid>
        
        <category>raspberry pi</category>
        
        <category>RPi</category>
        
        <category>Pi</category>
        
        <category>code</category>
        
        <category>programming</category>
        
        <category>physical computing</category>
        
        
        <category>guides</category>
        
      </item>
    
      <item>
        <title>Python</title>
        <description>&lt;h3 id=&quot;debug&quot;&gt;debug:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;import pdb&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;breakpoint : &lt;code&gt;pdb.set_trace()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;step in : s&lt;/li&gt;
  &lt;li&gt;step over : n&lt;/li&gt;
  &lt;li&gt;return out of function : r&lt;/li&gt;
  &lt;li&gt;next breakpoint : c&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;lambda&quot;&gt;LAMBDA:&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;install-setup-tools&quot;&gt;INSTALL SETUP TOOLS:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;IN POWERSHELL : &lt;code&gt;(Invoke-WebRequest https://bootstrap.pypa.io/ez_setup.py).Content | python -&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;install-packages&quot;&gt;INSTALL PACKAGES:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;PackageManager (PIP): &lt;code&gt;sudo apt-get install python-pip&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Serial: &lt;code&gt;pip install pyserial&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 25 Jun 2015 00:00:00 -0400</pubDate>
        <link>http://www.michaelsobrepera.com/guides/pythonGuide.html</link>
        <guid isPermaLink="true">http://www.michaelsobrepera.com/guides/pythonGuide.html</guid>
        
        <category>python</category>
        
        <category>code</category>
        
        <category>programming</category>
        
        
        <category>guides</category>
        
      </item>
    
      <item>
        <title>PowerShell</title>
        <description>&lt;ul&gt;
  &lt;li&gt;scoop -&amp;gt; to install stuff&lt;/li&gt;
  &lt;li&gt;PSget -&amp;gt; to install stuff&lt;/li&gt;
  &lt;li&gt;concfg -&amp;gt; to configure stuff&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;via-psget&quot;&gt;Via PSget:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;PSColor : adds coloring&lt;/li&gt;
  &lt;li&gt;posh-git -&amp;gt; to have git in powershell&lt;/li&gt;
  &lt;li&gt;out-diff : for reading diff files from git&lt;/li&gt;
  &lt;li&gt;jump-location : for navigating about the file directory&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;via-scoop&quot;&gt;Via Scoop:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;vim&lt;/li&gt;
  &lt;li&gt;git&lt;/li&gt;
  &lt;li&gt;concfg : configuration&lt;/li&gt;
  &lt;li&gt;openssh&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 25 Jun 2015 00:00:00 -0400</pubDate>
        <link>http://www.michaelsobrepera.com/guides/powershellGuide.html</link>
        <guid isPermaLink="true">http://www.michaelsobrepera.com/guides/powershellGuide.html</guid>
        
        <category>windows</category>
        
        <category>code</category>
        
        <category>programming</category>
        
        <category>powershell</category>
        
        <category>ps</category>
        
        
        <category>guides</category>
        
      </item>
    
      <item>
        <title>Node</title>
        <description>&lt;h4 id=&quot;arguments&quot;&gt;Arguments:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;args = process.argv;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;loading-global-libraries&quot;&gt;Loading Global Libraries:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;var &amp;lt;lib&amp;gt; = require(&#39;&amp;lt;lib&amp;gt;&#39;);&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;syncronous-file-io&quot;&gt;syncronous file I/O:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;uses fs library:&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;&amp;lt;buffer&amp;gt;=readFileSync(&amp;lt;path&amp;gt;);&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Buffer:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;&amp;lt;string&amp;gt;=&amp;lt;buffer&amp;gt;.toString();&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 25 Jun 2015 00:00:00 -0400</pubDate>
        <link>http://www.michaelsobrepera.com/guides/nodeGuide.html</link>
        <guid isPermaLink="true">http://www.michaelsobrepera.com/guides/nodeGuide.html</guid>
        
        <category>web development</category>
        
        <category>code</category>
        
        <category>programming</category>
        
        <category>node</category>
        
        <category>javascript</category>
        
        
        <category>guides</category>
        
      </item>
    
      <item>
        <title>Modelica</title>
        <description>&lt;ul&gt;
  &lt;li&gt;Evaluate Cell: shift+enter&lt;/li&gt;
  &lt;li&gt;Insert Input Cell: Ctrl+Shift+I&lt;/li&gt;
  &lt;li&gt;Insert New Cell of type above: Alt+Enter&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;identifier&quot;&gt;Identifier:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;constant&lt;/li&gt;
  &lt;li&gt;input&lt;/li&gt;
  &lt;li&gt;output&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;assignment-done-via-&quot;&gt;Assignment: done via &lt;code&gt;:=&lt;/code&gt;&lt;/h4&gt;

&lt;h4 id=&quot;equation-done-via-&quot;&gt;Equation: done via &lt;code&gt;=&lt;/code&gt;&lt;/h4&gt;

&lt;h3 id=&quot;variables&quot;&gt;Variables:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Base Types:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;Real(unit = &quot;&amp;lt;unit&amp;gt;&quot; ~ opt, min = &amp;lt;min&amp;gt; ~ opt, max = &amp;lt;max&amp;gt; ~ opt)&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Variability:
    &lt;ul&gt;
      &lt;li&gt;constant - never changes&lt;/li&gt;
      &lt;li&gt;parameter - changes between simulations&lt;/li&gt;
      &lt;li&gt;discrete - changes on events&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Starting Value:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;&amp;lt;type&amp;gt; &amp;lt;var&amp;gt;(start = &amp;lt;val&amp;gt;);&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Visibility:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;public&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;code&gt;protected&lt;/code&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;treated as headers, all variables after a visibility statement and before another control statement will have that visibility&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;libraries&quot;&gt;Libraries:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;loadModel(&lt;library&gt;);&lt;/library&gt;&lt;/li&gt;
  &lt;li&gt;Standard Library: Modelica&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;classes&quot;&gt;Classes:&lt;/h3&gt;
&lt;p&gt;Nested (local) classes are allowed&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Special words to replace “class”:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;model&lt;/code&gt;: intended for models; cannot be used for connections&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;record&lt;/code&gt;: intended for data structures; cannot have equations, cannot be used for connections&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;type&lt;/code&gt;: intended to introduce new types; must extend another type, record, or be an array&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;connector&lt;/code&gt;: defines connections; no equations&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;block&lt;/code&gt;: data flow of variables is known; all variables must be declared with “input” or “output” * followed by a type or class; no connections&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;function&lt;/code&gt;: defines inputs and outputs, no equation, exactly one algorithm(&lt;code&gt;&amp;lt;output var&amp;gt;:=&amp;lt;computation&amp;gt;&lt;/code&gt;)
        &lt;ul&gt;
          &lt;li&gt;&lt;code&gt;calling&lt;/code&gt;: &lt;function name=&quot;&quot;&gt;(&lt;input1&gt;,...)&lt;/input1&gt;&lt;/function&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Define:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;class &amp;lt;classname&amp;gt;&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;public
            &lt;ul&gt;
              &lt;li&gt;&lt;code&gt;parameter &amp;lt;type&amp;gt; &amp;lt;var&amp;gt; = &amp;lt;val ~ opt&amp;gt;;&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;end &lt;code&gt;&amp;lt;classname - to instantiate&amp;gt;&lt;/code&gt;;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;code&gt;type &amp;lt;classname&amp;gt; = &amp;lt;sourceClass to instantiate&amp;gt;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Container Classes:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;class &amp;lt;container classname&amp;gt;&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;code&gt;&amp;lt;contained classname&amp;gt; &amp;lt;thisname&amp;gt;(&amp;lt;paramater ~ opt&amp;gt;=&amp;lt;val&amp;gt;,...);&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;end &lt;code&gt;&amp;lt;container classname&amp;gt;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Drilling Down:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;&amp;lt;classname&amp;gt;.&amp;lt;classname...&amp;gt;.&amp;lt;parameter&amp;gt;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;&amp;lt;classname&amp;gt;(&amp;lt;paramater1&amp;gt;,&amp;lt;paramater2&amp;gt;,...)&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;View flattened class:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;instantiateModel(&amp;lt;class&amp;gt;)&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Inheritance:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;class &amp;lt;name&amp;gt;&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;code&gt;extends &amp;lt;super&amp;gt;;&lt;/code&gt;
  …Standard class stuff&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Generics:
    &lt;ul&gt;
      &lt;li&gt;prefix type with keyword : “replaceable” :: &lt;code&gt;replaceable &amp;lt;type&amp;gt; &amp;lt;name&amp;gt;;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Declaring:
        &lt;ul&gt;
          &lt;li&gt;&lt;code&gt;class &amp;lt;name&amp;gt; = &amp;lt;c lass type&amp;gt;(redeclare &amp;lt;type&amp;gt; &amp;lt;name&amp;gt;,...)&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Partial Classes:
    &lt;ul&gt;
      &lt;li&gt;may be extended, but not instantiated&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;partial class &amp;lt;classname&amp;gt;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Package:
    &lt;ul&gt;
      &lt;li&gt;Organizes classes of all types and constants&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-modelica&quot; data-lang=&quot;modelica&quot;&gt;&lt;span class=&quot;n&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stuff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;if importing other packages, prevent conflicts by using encapsulated package:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-modelica&quot; data-lang=&quot;modelica&quot;&gt;&lt;span class=&quot;k&quot;&gt;encapsulated&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PackageName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PackageName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;pre&gt;&lt;code&gt;* `import &amp;lt;packageName&amp;gt;;`
* `import &amp;lt;alias&amp;gt;=&amp;lt;packageName&amp;gt;;`
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;Simulation:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;simulate(&amp;lt;class&amp;gt;)&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Visualization:
    &lt;ul&gt;
      &lt;li&gt;Plot:
        &lt;ul&gt;
          &lt;li&gt;&lt;code&gt;plot(&amp;lt;args&amp;gt;)&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Arrays:
    &lt;ul&gt;
      &lt;li&gt;Declaration:
        &lt;ul&gt;
          &lt;li&gt;&lt;code&gt;&amp;lt;type&amp;gt;[&amp;lt;dim1,...&amp;gt;] &amp;lt;name&amp;gt;;&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;OR&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;&lt;code&gt;&amp;lt;type&amp;gt; &amp;lt;name&amp;gt;[&amp;lt;dim1,...&amp;gt;];&lt;/code&gt;&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;Can initialize with declaration:
            &lt;ul&gt;
              &lt;li&gt;&lt;code&gt;&amp;lt;type&amp;gt;[&amp;lt;dim1,...&amp;gt;] &amp;lt;name&amp;gt; = {x,y,z};&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;OR&lt;/li&gt;
              &lt;li&gt;&lt;code&gt;&amp;lt;type&amp;gt; &amp;lt;name&amp;gt;[&amp;lt;dim1,...&amp;gt;] = \{\{x,y\},\{f,g\}\};&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Multiplication:
        &lt;ul&gt;
          &lt;li&gt;&lt;code&gt;*&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;is element wise&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Matrices:
    &lt;ul&gt;
      &lt;li&gt;Declaration:
        &lt;ul&gt;
          &lt;li&gt;&lt;code&gt;&amp;lt;type&amp;gt; &amp;lt;name&amp;gt;[&amp;lt;dim1,...&amp;gt;] = [&amp;lt;v&amp;gt;,&amp;lt;v&amp;gt;;...];&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Multiplication:
        &lt;ul&gt;
          &lt;li&gt;&lt;code&gt;*&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code&gt;is matrix multiplication&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Algorithms:
    &lt;ul&gt;
      &lt;li&gt;start with keyword “algorithm”&lt;/li&gt;
      &lt;li&gt;are the only place where traditional procedural command flow exists:&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-modelica&quot; data-lang=&quot;modelica&quot;&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;loop&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-modelica&quot; data-lang=&quot;modelica&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;elseif&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;reinit(&amp;lt;var&amp;gt;,&amp;lt;new val&amp;gt;)&lt;/code&gt; : reinitializes variable, useful in while loop&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 25 Jun 2015 00:00:00 -0400</pubDate>
        <link>http://www.michaelsobrepera.com/guides/modelicaGuide.html</link>
        <guid isPermaLink="true">http://www.michaelsobrepera.com/guides/modelicaGuide.html</guid>
        
        <category>modelica</category>
        
        <category>code</category>
        
        <category>programming</category>
        
        <category>modeling</category>
        
        
        <category>guides</category>
        
      </item>
    
  </channel>
</rss>
